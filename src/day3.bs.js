// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Caml_int32 = require("bs-platform/lib/js/caml_int32.js");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function loop(_state) {
  while(true) {
    var state = _state;
    var id = state[0];
    if (id !== 1) {
      switch (state[1]) {
        case 0 : 
            var y = state[3];
            var x = state[2];
            var match = +((y - 1 | 0) === Caml_int32.imul(x, -1));
            _state = /* tuple */[
              id - 1 | 0,
              match !== 0 ? /* Left */3 : /* Up */0,
              x,
              y - 1 | 0
            ];
            continue ;
            case 1 : 
            var y$1 = state[3];
            var x$1 = state[2];
            var match$1 = +((x$1 + 1 | 0) > y$1);
            _state = /* tuple */[
              id - 1 | 0,
              match$1 !== 0 ? /* Up */0 : /* Right */1,
              x$1 + 1 | 0,
              y$1
            ];
            continue ;
            case 2 : 
            var y$2 = state[3];
            var x$2 = state[2];
            var match$2 = +((y$2 + 1 | 0) === Caml_int32.imul(x$2, -1));
            _state = /* tuple */[
              id - 1 | 0,
              match$2 !== 0 ? /* Right */1 : /* Down */2,
              x$2,
              y$2 + 1 | 0
            ];
            continue ;
            case 3 : 
            var y$3 = state[3];
            var x$3 = state[2];
            var match$3 = +((x$3 - 1 | 0) === y$3);
            _state = /* tuple */[
              id - 1 | 0,
              match$3 !== 0 ? /* Down */2 : /* Left */3,
              x$3 - 1 | 0,
              y$3
            ];
            continue ;
            
      }
    } else {
      return Pervasives.abs(state[2]) + Pervasives.abs(state[3]) | 0;
    }
  };
}

function distance(id) {
  return loop(/* tuple */[
              id,
              /* Right */1,
              0,
              0
            ]);
}

exports.loop     = loop;
exports.distance = distance;
/* No side effect */
